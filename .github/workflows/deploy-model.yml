name: Deploy model to endpoint

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    # Bind job to the right environment
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Azure ML CLI
        run: |
          pip install -U azure-ai-ml azureml-mlflow
      - name: Create conda environment file
        run: |
          cat > conda_env.yml << 'EOF'
          name: mlflow-env
          channels:
            - conda-forge
            - defaults
          dependencies:
            - python=3.8
            - pip
            - setuptools>=65.0
            - pip:
              - mlflow>=2.0.0
              - scikit-learn>=1.0.0
              - pandas>=1.3.0
              - numpy>=1.21.0
              - azureml-inference-server-http
          EOF
      - name: Create environment YAML
        run: |
          cat > environment.yml << 'EOF'
          $schema: https://azuremlschemas.azureedge.net/latest/environment.schema.json
          name: diabetes-classifier-env
          version: 1
          image: mcr.microsoft.com/azureml/minimal-ubuntu20.04-py38-cpu-inference:latest
          conda_file: conda_env.yml
          EOF
      - name: Create deployment YAML dynamically
        run: |
          cat > deployment.yml << 'EOF'
          $schema: https://azuremlschemas.azureedge.net/latest/managedOnlineDeployment.schema.json
          name: blue
          endpoint_name: diabetes-endpoint
          model: azureml:diabetes-classifier:1
          environment: azureml:diabetes-classifier-env:1
          instance_type: Standard_DS3_v2
          instance_count: 1
          EOF
      - name: Create environment
        run: |
          az ml environment create \
            --file environment.yml \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --workspace-name ${{ secrets.AZURE_ML_WORKSPACE }}

      - name: Deploy latest registered model
        run: |
          ENDPOINT_NAME=diabetes-endpoint
          DEPLOYMENT_NAME=blue

          # Check if deployment exists and create/update accordingly
          if az ml online-deployment show --name $DEPLOYMENT_NAME --endpoint-name $ENDPOINT_NAME --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --workspace-name ${{ secrets.AZURE_ML_WORKSPACE }} > /dev/null 2>&1; then
            echo "Deployment exists, updating..."
            # Try to update, but if it fails due to unrecoverable state, delete and recreate
            if ! az ml online-deployment update \
              --file deployment.yml \
              --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
              --workspace-name ${{ secrets.AZURE_ML_WORKSPACE }} 2>/dev/null; then
              
              echo "Update failed, deployment in unrecoverable state. Deleting and recreating..."
              # Delete the failed deployment
              az ml online-deployment delete \
                --name $DEPLOYMENT_NAME \
                --endpoint-name $ENDPOINT_NAME \
                --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
                --workspace-name ${{ secrets.AZURE_ML_WORKSPACE }} \
                --yes
              
              # Wait a bit for deletion to complete
              sleep 30
              # Create new deployment
              az ml online-deployment create \
                --file deployment.yml \
                --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
                --workspace-name ${{ secrets.AZURE_ML_WORKSPACE }} \
                --all-traffic
            fi
          else
            echo "Deployment doesn't exist, creating..."
            az ml online-deployment create \
              --file deployment.yml \
              --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
              --workspace-name ${{ secrets.AZURE_ML_WORKSPACE }} \
              --all-traffic
          fi
